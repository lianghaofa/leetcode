public class UpdateMatrix {

    public int[][] updateMatrix(int[][] mat) {
        if (mat.length == 0) {
            return mat;
        }
        int[][] res = new int[mat.length][mat[0].length];
        for (int i = mat.length - 1; i >= 0; i--) {
            for (int j = mat[i].length - 1; j >= 0; j--) {
                if (mat[i][j] == 0) {
                    res[i][j] = 0;
                } else if (j + 1 >= mat[i].length && i + 1 >= mat.length) {
                    res[i][j] = 100000;
                } else if (j + 1 >= mat[i].length) {
                    res[i][j] = res[i + 1][j] + 1;
                } else if (i + 1 >= mat.length) {
                    res[i][j] = res[i][j + 1] + 1;
                } else {
                    res[i][j] = Math.min(res[i + 1][j], res[i][j + 1]) + 1;
                }
            }
        }
        for (int i = 0; i < mat.length; i++) {
            for (int j = 0; j < mat[i].length; j++) {
                if (mat[i][j] == 0) {
                    res[i][j] = 0;
                } else if (j - 1 < 0 && i - 1 < 0) {
                    continue;
                } else if (j - 1 < 0) {
                    res[i][j] = Math.min(res[i - 1][j] + 1, res[i][j]);
                } else if (i - 1 < 0) {
                    res[i][j] = Math.min(res[i][j - 1] + 1, res[i][j]);
                } else {
                    res[i][j] = Math.min(Math.min(res[i - 1][j], res[i][j - 1]) + 1, res[i][j]);
                }
            }
        }
        return res;
    }

}
