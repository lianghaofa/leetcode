public class CountSubIslands {

    public static void main(String[] args) {
        int[][] grid1 = new int[5][];
        grid1[0] = new int[]{1,1,1,0,0};
        grid1[1] = new int[]{0,1,1,1,1};
        grid1[2] = new int[]{0,0,0,0,0};
        grid1[3] = new int[]{1,0,0,0,0};
        grid1[4] = new int[]{1,1,0,1,1};

        int[][] grid2 = new int[5][];
        grid2[0] = new int[]{1,1,1,0,0};
        grid2[1] = new int[]{0,0,1,1,1};
        grid2[2] = new int[]{0,1,0,0,0};
        grid2[3] = new int[]{1,0,0,0,0};
        grid2[4] = new int[]{1,1,0,1,1};
        countSubIslands( grid1,  grid2);
    }

    public static int countSubIslands(int[][] grid1, int[][] grid2) {
        int res = 0;
        for (int i = 0;i < grid2.length; i ++){
            for (int j = 0;j < grid2[i].length; j ++){
                if (grid2[i][j] == 1 && countIslands(grid1,  grid2, i, j)){
                    res ++;
                }
            }
        }
        return res;
    }

    public static boolean countIslands(int[][] grid1, int[][] grid2,int i,int j) {
        if (i < 0 || j < 0 || i > grid2.length || j > grid2[i].length || grid2[i][j] == 0 || grid2[i][j] == 2){
            return true;
        }
        if (grid2[i][j] == 1 && grid1[i][j] == 1){
            grid2[i][j] = 2;
            boolean t = countIslands(grid1, grid2, i - 1, j);
            boolean d = countIslands(grid1, grid2, i + 1, j);
            boolean r = countIslands(grid1, grid2, i , j + 1);
            boolean l = countIslands(grid1, grid2, i , j - 1);
            return t && d && r && l;
        }
        return false;
    }

}
