public class SplitListToParts {

  public static class ListNode {     int val;
      ListNode next;
      ListNode() {}
      ListNode(int val) { this.val = val; }
      ListNode(int val, ListNode next) { this.val = val; this.next = next; }
  }


    public static void main(String[] args) {
        ListNode listNode0 = new ListNode(1);
        ListNode listNode1 = new ListNode(2);
        ListNode listNode2 = new ListNode(3);
        listNode0.next = listNode1;
        listNode1.next = listNode2;
        splitListToParts(listNode0, 5);
    }
    public static ListNode[] splitListToParts(ListNode head, int k) {
        ListNode[] ans = new ListNode[k];
        int len = 0;
        ListNode cur = head;
        while (cur != null){
            cur = cur.next;
            len ++;
        }
        int c = len / k;
        int m = len % k;
        int index = 0;
        cur = head;
        while (index < k){
            ans[index] = cur;
            int count = c + (index < m ? 1 : 0);
            ListNode pre = cur;
            while (count > 0 && cur != null){
                pre = cur;
                cur = cur.next;
                count --;
            }
            if (pre != null){
                pre.next = null;
            }
            index ++;
        }
        return ans;
    }


}
