public class BSTIterator {


      public class TreeNode {
      int val;
      TreeNode left;
      TreeNode right;
      TreeNode() {}
      TreeNode(int val) { this.val = val; }
      TreeNode(int val, TreeNode left, TreeNode right) {
          this.val = val;
          this.left = left;
          this.right = right;
      }
  }
    TreeNode cur;
    TreeNode mostRight = null;
    public BSTIterator(TreeNode root) {
        cur = root;
    }

    public int next() {
        while (cur != null){
            mostRight = cur.left;
            if (mostRight != null){
                while (mostRight.right != null && mostRight.right != cur){
                    mostRight =  mostRight.right;
                }
                if (mostRight.right == null){
                    mostRight.right = cur;
                    cur = cur.left;
                    continue;
                }else {
                    mostRight.right = null;
                }
            }
            int res =  cur.val;
            cur = cur.right;
            return res;
        }
        return -1;
    }

    public boolean hasNext() {
        return cur != null;
    }
}
